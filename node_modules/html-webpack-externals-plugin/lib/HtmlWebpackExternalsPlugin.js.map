{"version":3,"sources":["../src/HtmlWebpackExternalsPlugin.js"],"names":["HtmlWebpackExternalsPlugin","config","validateArguments","assetsToPrepend","assetsToAppend","assetsToCopy","externals","hash","outputPath","publicPath","files","enabled","cwpOptions","forEach","module","entry","global","supplements","append","push","localEntries","entries","Array","isArray","map","path","type","undefined","URL_ENTRY","test","result","asset","cwpPatternConfig","compiler","options","output","pluginsToApply","from","to","createAssetsPlugin","assets","length","plugin","apply","ajv","useDefaults","removeAdditional","validateConfig","compile","TypeError","errorsText","errors"],"mappings":"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","file":"HtmlWebpackExternalsPlugin.js","sourcesContent":["import CopyWebpackPlugin from 'copy-webpack-plugin'\nimport HtmlWebpackIncludeAssetsPlugin from 'html-webpack-include-assets-plugin'\nimport Ajv from 'ajv'\nimport configSchema from './configSchema.json'\n\nexport default class HtmlWebpackExternalsPlugin {\n  static validateArguments = (() => {\n    const ajv = new Ajv({ useDefaults: true, removeAdditional: true })\n    const validateConfig = ajv.compile(configSchema)\n\n    return config => {\n      if (!validateConfig(config)) {\n        throw new TypeError(ajv.errorsText(validateConfig.errors))\n      }\n    }\n  })()\n\n  static URL_ENTRY = /^(http:|https:)?\\/\\//\n\n  constructor(config) {\n    HtmlWebpackExternalsPlugin.validateArguments(config)\n\n    this.assetsToPrepend = []\n    this.assetsToAppend = []\n    this.assetsToCopy = []\n    this.externals = []\n\n    const { externals, hash, outputPath, publicPath, files, enabled, cwpOptions } = config\n    this.hash = hash\n    this.outputPath = outputPath\n    this.publicPath = publicPath\n    this.files = files\n    this.enabled = enabled\n    this.cwpOptions = cwpOptions\n\n    externals.forEach(({ module, entry, global, supplements, append }) => {\n      this.externals.push(global ? { [module]: global } : module)\n\n      const localEntries = []\n\n      const entries = (Array.isArray(entry) ? entry : [entry]).map(entry => {\n        if (typeof entry === 'string') {\n          entry = { path: entry, type: undefined }\n        }\n        if (HtmlWebpackExternalsPlugin.URL_ENTRY.test(entry.path)) {\n          return entry\n        }\n\n        const result = { ...entry, path: `${module}/${entry.path}` }\n        localEntries.push(result)\n        return result\n      })\n\n      if (append) {\n        this.assetsToAppend = [...this.assetsToAppend, ...entries]\n      } else {\n        this.assetsToPrepend = [...this.assetsToPrepend, ...entries]\n      }\n\n      this.assetsToCopy = [\n        ...this.assetsToCopy,\n        ...localEntries,\n        ...supplements.map(asset =>\n          typeof asset === 'string'\n            ? { path: `${module}/${asset}`, cwpPatternConfig: {} }\n            : { ...asset, path: `${module}/${asset.path}` }\n        ),\n      ]\n    })\n  }\n\n  apply(compiler) {\n    if (!this.enabled) {\n      return\n    }\n\n    if (!compiler.options.externals) {\n      compiler.options.externals = this.externals\n    } else if (Array.isArray(compiler.options.externals)) {\n      compiler.options.externals = [...compiler.options.externals, ...this.externals]\n    } else {\n      compiler.options.externals = [compiler.options.externals, ...this.externals]\n    }\n\n    const publicPath = (() => {\n      if (this.publicPath != null) {\n        return this.publicPath\n      } else if (compiler.options.output.publicPath != null) {\n        return compiler.options.output.publicPath\n      } else {\n        return ''\n      }\n    })()\n\n    const pluginsToApply = []\n\n    pluginsToApply.push(\n      new CopyWebpackPlugin(\n        this.assetsToCopy.map(({ path, cwpPatternConfig }) => ({\n          from: path,\n          to: `${this.outputPath}/${path}`,\n          ...cwpPatternConfig,\n        })),\n        this.cwpOptions\n      )\n    )\n\n    const createAssetsPlugin = (assets, append) => {\n      if (assets.length) {\n        pluginsToApply.push(\n          new HtmlWebpackIncludeAssetsPlugin({\n            assets: assets.map(\n              asset =>\n                HtmlWebpackExternalsPlugin.URL_ENTRY.test(asset.path)\n                  ? asset\n                  : {\n                      ...asset,\n                      path: `${publicPath}${this.outputPath}/${asset.path}`,\n                    }\n            ),\n            append,\n            hash: this.hash,\n            files: this.files == null ? undefined : this.files,\n            publicPath: '',\n          })\n        )\n      }\n    }\n\n    createAssetsPlugin(this.assetsToPrepend, false)\n    createAssetsPlugin(this.assetsToAppend, true)\n\n    pluginsToApply.forEach(plugin => plugin.apply(compiler))\n  }\n}\n"]}